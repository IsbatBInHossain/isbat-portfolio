/* Import the Tailwind CSS primitives*/
@import 'tailwindcss';

@theme {
  /* Define color palette */
  --color-background: #0d0208;
  --color-matrix-green: #00ff41;
  --color-matrix-green-dark: #008f26;
  --color-text-primary: #e0e0e0;
  --color-text-secondary: #a0a0a0;

  /* Define font family */
  --font-mono: 'Fira Code', monospace;

  /* Define animations */
  --animation-glitch: glitch 0.3s linear;
  @keyframes glitch {
    from,
    to {
      transform: translate(0, 0);
    }
    25% {
      transform: translate(-2px, 2px);
    }
    50% {
      transform: translate(2px, -2px);
    }
    75% {
      transform: translate(-2px, -2px);
    }
  }
}

/*
  Apply theme variables to the base layer.
*/
@layer base {
  html {
    scroll-behavior: smooth;
    /* Custom cursor */
    cursor: url('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24"><path d="M12 0V24M0 12H24" stroke="%2300FF41" stroke-width="2"/></svg>')
        12 12,
      auto;

    /* Target links, buttons, and anything with a role of button */
    a,
    button,
    [role='button'] {
      /* This new SVG path uses strokes to draw open brackets */
      cursor: url('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24"><path d="M8 4H4v16h4 M16 4h4v16h-4" fill="none" stroke="%2300FF41" stroke-width="2" stroke-linecap="square"/></svg>')
          12 12,
        pointer;
    }

    /*
      Custom Text Selection Highlight
      */
    ::selection {
      background-color: var(--color-matrix-green);
      color: var(--color-background);
    }

    /* For Firefox, which uses a different pseudo-element */
    ::-moz-selection {
      background-color: var(--color-matrix-green);
      color: var(--color-background);
    }
  }
  body {
    background-color: var(--color-background);
    color: var(--color-text-primary);
    font-family: var(--font-mono);
  }

  a {
    color: var(--color-matrix-green);
    transition: color 0.2s;
  }
  a:hover {
    color: var(--color-matrix-green-dark);
  }
  ::-webkit-scrollbar {
    width: 10px;
  }
  ::-webkit-scrollbar-track {
    background-color: var(--color-background);
  }
  ::-webkit-scrollbar-thumb {
    background-color: var(--color-matrix-green-dark);
    border-radius: 5px;
    border: 2px solid var(--color-background);
  }
  ::-webkit-scrollbar-thumb:hover {
    background-color: var(--color-matrix-green);
  }

  /* CRT Loader Effects */
  .crt-container {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: var(--color-background);
    color: var(--color-matrix-green);
    font-family: var(--font-mono);
    z-index: 9999;
    overflow: hidden;
  }

  .crt-text {
    /* The text glow/bloom effect */
    text-shadow: 0 0 5px var(--color-matrix-green);
    /* The subtle text blur */
    filter: blur(0.4px);
    position: relative;
    z-index: 2;
  }
  .crt-text-subtle {
    text-shadow: 0 0 2px var(--color-matrix-green);
    filter: blur(0.2px);
    position: relative;
    z-index: 2;
  }

  /* Scanline Overlay */
  .crt-container::after {
    content: ' ';
    display: block;
    position: absolute;
    top: 0;
    left: 0;
    bottom: 0;
    right: 0;
    background: linear-gradient(
        rgba(18, 16, 16, 0) 50%,
        rgba(0, 0, 0, 0.25) 50%
      ),
      linear-gradient(
        90deg,
        rgba(255, 0, 0, 0.06),
        rgba(0, 255, 0, 0.02),
        rgba(0, 0, 255, 0.06)
      );
    z-index: 2;
    background-size: 100% 3px, 3px 100%;
    pointer-events: none;
    animation: flicker 0.15s infinite;
  }

  /* CRT Effect */
  .crt-effect {
    position: relative;
  }

  .crt-effect::after {
    content: ' ';
    display: block;
    position: fixed;
    top: 0;
    left: 0;
    bottom: 0;
    right: 0;
    background: linear-gradient(
        rgba(18, 16, 16, 0) 50%,
        rgba(0, 0, 0, 0.25) 50%
      ),
      linear-gradient(
        90deg,
        rgba(255, 0, 0, 0.06),
        rgba(0, 255, 0, 0.02),
        rgba(0, 0, 255, 0.06)
      );
    z-index: 10000;
    background-size: 100% 3px, 3px 100%;
    pointer-events: none; /* CRUCIAL: for clicking through the overlay */
    animation: flicker 0.15s infinite;
  }

  /* Background Grid layer */
  .grid-background {
    position: relative;
    background-color: var(--color-background);
    background-image: linear-gradient(
        rgba(0, 143, 38, 0.5) 1px,
        transparent 1px
      ),
      linear-gradient(90deg, rgba(0, 143, 38, 0.5) 1px, transparent 1px);
    background-size: 4rem 4rem;
    background-position: center center;
  }

  /* Spotlight layer */
  .interactive-grid-spotlight {
    content: '';
    position: absolute;
    inset: 0;
    pointer-events: none;

    background-image: linear-gradient(
        rgba(0, 255, 65, 0.5) 1px,
        transparent 1px
      ),
      linear-gradient(90deg, rgba(0, 255, 65, 0.5) 1px, transparent 1px);
    background-size: 4rem 4rem;
    background-position: center center;

    mask-image: radial-gradient(
      circle var(--spotlight-size, 100px) at var(--mouse-x, -999px)
        var(--mouse-y, -999px),
      black 0%,
      transparent 100%
    );
    -webkit-mask-image: radial-gradient(
      circle var(--spotlight-size, 100px) at var(--mouse-x, -999px)
        var(--mouse-y, -999px),
      black 0%,
      transparent 100%
    );
  }

  /* Blinking Text/Cursor Animation */
  @keyframes flicker {
    0% {
      opacity: 0.2;
    }
    20% {
      opacity: 0.8;
    }
    40% {
      opacity: 0.3;
    }
    60% {
      opacity: 0.9;
    }
    80% {
      opacity: 0.4;
    }
    100% {
      opacity: 1;
    }
  }
}
